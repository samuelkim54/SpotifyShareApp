{"ast":null,"code":"var _jsxFileName = \"/Users/sam/Desktop/Coding Projects/Spotify React/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Spotify from 'spotify-web-api-js';\nconst spotifyWebApi = new Spotify();\n\nclass App extends Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n    this.state = {\n      loggedIn: params.access_token ? true : false,\n      nowPlaying: {\n        name: 'Not Checked',\n        albumArt: ''\n      },\n      recentlyPlayed: {\n        track1: '',\n        track2: '',\n        track3: '',\n        track4: '',\n        track5: '',\n        track6: '',\n        track7: '',\n        track8: '',\n        track9: '',\n        track0: '',\n        track3: '',\n        track3: '',\n        track3: '',\n        track3: '',\n        track3: '',\n        track3: '',\n        track3: '',\n        track3: '',\n        track3: '',\n        track3: ''\n      }\n    };\n\n    if (params.access_token) {\n      spotifyWebApi.setAccessToken(params.access_token);\n    }\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n\n    while (e = r.exec(q)) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n\n    return hashParams;\n  }\n\n  getNowPlaying() {\n    spotifyWebApi.getMyCurrentPlaybackState().then(response => {\n      this.setState({\n        nowPlaying: {\n          name: response.item.name,\n          albumArt: response.item.album.images[0].url\n        }\n      });\n    });\n  }\n\n  getRecentlyPlayed() {\n    spotifyWebApi.getMyRecentlyPlayedTracks(50).then(response => {\n      this.setState({});\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"http://localhost:8888\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 8\n      }\n    }, \"Login with Spotify\"), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, \" Now Playing: \", this.state.nowPlaying.name, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.nowPlaying.albumArt,\n      style: {\n        height: 150\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, \"Played Today: \", this.state.recentlyPlayed), this.state.loggedIn && /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.getNowPlaying(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, \"Check Now Playing\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sam/Desktop/Coding Projects/Spotify React/client/src/App.js"],"names":["React","Component","Spotify","spotifyWebApi","App","constructor","params","getHashParams","state","loggedIn","access_token","nowPlaying","name","albumArt","recentlyPlayed","track1","track2","track3","track4","track5","track6","track7","track8","track9","track0","setAccessToken","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","getNowPlaying","getMyCurrentPlaybackState","then","response","setState","item","album","images","url","getRecentlyPlayed","getMyRecentlyPlayedTracks","render","height"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Spotify from 'spotify-web-api-js'\n\nconst spotifyWebApi = new Spotify();\n\nclass App extends Component {\n  constructor(){\n    super();\n    const params = this.getHashParams();\n    this.state ={\n      loggedIn: params.access_token ? true : false,\n      nowPlaying:  { name: 'Not Checked', albumArt: '' },\n      recentlyPlayed: {track1: '',track2: '',track3: '',\n      track4: '',\n      track5: '',\n      track6: '',\n      track7: '',\n      track8: '',\n      track9: '',\n      track0: '',\n      track3: '',\n      track3: '',\n      track3: '',\n      track3: '',\n      track3: '',\n      track3: '',\n      track3: '',\n      track3: '',\n      track3: '',\n      track3: ''}\n    }\n    if (params.access_token) {\n      spotifyWebApi.setAccessToken(params.access_token)\n    }\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    while ( e = r.exec(q)) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n    return hashParams;\n  }\n\n  getNowPlaying(){\n      spotifyWebApi.getMyCurrentPlaybackState()\n      .then((response) => {\n         this.setState({\n           nowPlaying: {\n            name: response.item.name,\n            albumArt: response.item.album.images[0].url\n    \n          }\n        })\n      })\n  }\n\n  getRecentlyPlayed(){\n    spotifyWebApi.getMyRecentlyPlayedTracks(50).then((response) => {\n      this.setState({\n\n      })\n    })\n  }\n\n  render() {\n  return (\n    <div className=\"App\">\n      <a href='http://localhost:8888'> \n       <button>Login with Spotify</button> </a>\n      <div> Now Playing: { this.state.nowPlaying.name } </div>\n      <div> <img src = { this.state.nowPlaying.albumArt } style={{height : 150}}/>\n         </div>\n      <div>Played Today: {this.state.recentlyPlayed}</div>\n         { this.state.loggedIn &&\n      <button onClick={()=> this.getNowPlaying()}>\n        Check Now Playing\n      </button>\n  }\n    </div>\n  );\n }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}