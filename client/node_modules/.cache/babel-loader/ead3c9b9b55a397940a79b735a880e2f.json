{"ast":null,"code":"var _jsxFileName = \"/Users/sam/Desktop/Coding Projects/Spotify React/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Spotify from 'spotify-web-api-js';\nconst spotifyWebApi = new Spotify();\n\nclass App extends Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n    this.state = {\n      loggedIn: params.access_token ? true : false,\n      nowPlaying: {\n        name: 'Not Checked',\n        albumArt: ''\n      },\n      recentlyPlayed: {\n        track1: ''\n      }\n    };\n\n    if (params.access_token) {\n      spotifyWebApi.setAccessToken(params.access_token);\n    }\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n\n    while (e = r.exec(q)) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n\n    return hashParams;\n  }\n\n  getNowPlaying() {\n    spotifyWebApi.getMyCurrentPlaybackState().then(response => {\n      this.setState({\n        nowPlaying: {\n          name: response.item.name,\n          albumArt: response.item.album.images[0].url\n        }\n      });\n    });\n  }\n\n  getRecentlyPlayed() {\n    spotifyWebApi.getMyRecentlyPlayedTracks(20).then(response1 => {\n      this.setState({\n        recentlyPlayed: {\n          track1: response1.items[0].name\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"http://localhost:8888\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 8\n      }\n    }, \"Login with Spotify\"), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, \" Now Playing: \", this.state.nowPlaying.name, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.nowPlaying.albumArt,\n      style: {\n        height: 150\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, \"Played Today: \", this.state.recentlyPlayed), this.state.loggedIn && /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.getNowPlaying(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, \"Check Now Playing\"), this.state.loggedIn && /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.getRecentlyPlayed(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 31\n      }\n    }, \"Get Music Played Today\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sam/Desktop/Coding Projects/Spotify React/client/src/App.js"],"names":["React","Component","Spotify","spotifyWebApi","App","constructor","params","getHashParams","state","loggedIn","access_token","nowPlaying","name","albumArt","recentlyPlayed","track1","setAccessToken","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","getNowPlaying","getMyCurrentPlaybackState","then","response","setState","item","album","images","url","getRecentlyPlayed","getMyRecentlyPlayedTracks","response1","items","render","height"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Spotify from 'spotify-web-api-js'\n\nconst spotifyWebApi = new Spotify();\n\nclass App extends Component {\n  constructor(){\n    super();\n    const params = this.getHashParams();\n    this.state ={\n      loggedIn: params.access_token ? true : false,\n      nowPlaying:  { name: 'Not Checked', albumArt: '' },\n      recentlyPlayed: {track1: ''}\n    }\n    if (params.access_token) {\n      spotifyWebApi.setAccessToken(params.access_token)\n    }\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    while ( e = r.exec(q)) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n    return hashParams;\n  }\n\n  getNowPlaying(){\n      spotifyWebApi.getMyCurrentPlaybackState()\n      .then((response) => {\n         this.setState({\n           nowPlaying: {\n            name: response.item.name,\n            albumArt: response.item.album.images[0].url\n          }\n        })\n      })\n  }\n\n  getRecentlyPlayed(){\n    spotifyWebApi.getMyRecentlyPlayedTracks(20).then((response1) => {\n      this.setState({\n      recentlyPlayed: {\n        track1: response1.items[0].name\n      }\n      })\n    })\n  }\n\n  render() {\n  return (\n    <div className=\"App\">\n      <a href='http://localhost:8888'> \n       <button>Login with Spotify</button> </a>\n      <div> Now Playing: { this.state.nowPlaying.name } </div>\n      <div> <img src = { this.state.nowPlaying.albumArt } style={{height : 150}}/>\n         </div>\n      <div>Played Today: {this.state.recentlyPlayed}</div>\n         { this.state.loggedIn &&\n      <button onClick={()=> this.getNowPlaying()}>\n        Check Now Playing\n      </button>}\n\n    { this.state.loggedIn &&  <button onClick={()=> this.getRecentlyPlayed()}>\n        Get Music Played Today\n         </button> }\n    </div>\n  );\n }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}